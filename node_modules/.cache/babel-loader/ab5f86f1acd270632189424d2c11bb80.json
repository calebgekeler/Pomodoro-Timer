{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration'; //import {secondsToDuration} from '../utils/duration';\n\nimport AfterPlay from './AfterPlay';\nimport LandingDisplay from './LandingDisplay';\n\nfunction Pomodoro() {\n  const fnObj = {\n    playPause: () => {\n      setData({\n        [data.displayTimer]: data.displayTimer = true,\n        [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n        [data.displayClickCounter]: data.displayClickCounter += 1\n      }); //setData({...data});\n\n      if (data.displayClickCounter === 1) {\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer * 60\n        });\n        return setData({ ...data\n        });\n      }\n\n      return setData({ ...data\n      });\n    },\n    stopHandler: () => {\n      fnObj.playPause();\n      setData({ ...initialState\n      });\n    },\n    timer: () => {\n      if (data.countDownVar > 0) {\n        setData({\n          [data.countDownVar]: data.countDownVar -= 1,\n          [data.counter]: data.counter += 1\n        }); //console.log(data.ariaCounter)\n\n        return setData({ ...data\n        });\n      }\n\n      if (data.countDownVar === 0 && data.label === \"Focusing\") {\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.breakTimer * 60,\n          [data.label]: data.label = \"On Break\",\n          [data.counter]: data.counter = 0\n        });\n        return setData({ ...data\n        });\n      }\n\n      if (data.countDownVar === 0 && data.label === \"On Break\") {\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer * 60,\n          [data.label]: data.label = \"Focusing\",\n          [data.counter]: data.counter = 0\n        });\n        return setData({ ...data\n        });\n      }\n    }\n  };\n  let initialState = {\n    focusTimer: 25,\n    breakTimer: 5,\n    label: \"Focusing\",\n    counter: 0,\n    displayTimer: false,\n    isTimerRunning: false,\n    countDownVar: 0,\n    displayClickCounter: 0\n  };\n  let [data, setData] = useState({ ...initialState\n  }); //console.log('DATA OBJ', data);\n\n  useInterval(() => {\n    fnObj.timer();\n  }, data.isTimerRunning ? 1000 : null); // function timer(){\n  //   if(data.countDownVar>0){\n  //     setData({\n  //     [data.countDownVar]: data.countDownVar-=1,\n  //     [data.counter]: data.counter+=1\n  //     });\n  //     //console.log(data.ariaCounter)\n  //     return setData({...data});\n  //   }\n  //   if(data.countDownVar===0 && data.label===\"Focusing\"){\n  //     new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n  //     setData({\n  //       [data.countDownVar]: data.countDownVar = data.breakTimer*60,\n  //       [data.label]: data.label = \"On Break\",\n  //       [data.counter]: data.counter=0,\n  //     });\n  //     return setData({...data});\n  //   }\n  //   if(data.countDownVar===0 && data.label===\"On Break\"){\n  //     new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n  //     setData({\n  //       [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n  //       [data.label]: data.label = \"Focusing\",\n  //       [data.counter]: data.counter=0,\n  //     });\n  //       return setData({...data});\n  //   }\n  // }\n  // function playPause() {\n  //   setData({\n  //     [data.displayTimer]: data.displayTimer = true, \n  //     [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n  //     [data.displayClickCounter]: data.displayClickCounter+=1\n  //   })\n  //   //setData({...data});\n  //   if(data.displayClickCounter===1){\n  //     setData({\n  //       [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n  //     });\n  //     return setData({...data})\n  //   }\n  //   return setData({...data})\n  // }\n  // function stopHandler(){\n  //   playPause();\n  //   setData({...initialState});\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LandingDisplay, {\n    data: data,\n    stopHandler: fnObj.stopHandler,\n    playPause: fnObj.playPause,\n    setData: setData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AfterPlay, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","AfterPlay","LandingDisplay","Pomodoro","fnObj","playPause","setData","data","displayTimer","istimerRunning","isTimerRunning","displayClickCounter","countDownVar","focusTimer","stopHandler","initialState","timer","counter","label","Audio","process","env","PUBLIC_URL","play","breakTimer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration} from '../utils/duration';\n//import {secondsToDuration} from '../utils/duration';\nimport AfterPlay from './AfterPlay'\nimport LandingDisplay from './LandingDisplay'\n\n\n\nfunction Pomodoro() {\n\n  const fnObj = {\n    playPause: () => {\n      setData({\n      [data.displayTimer]: data.displayTimer = true, \n      [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n      [data.displayClickCounter]: data.displayClickCounter+=1\n      })\n    //setData({...data});\n      if(data.displayClickCounter===1){\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n        });\n        return setData({...data})\n      }\n      return setData({...data})\n    },\n\n    stopHandler: ()=>{\n      fnObj.playPause();\n      setData({...initialState})\n    },\n\n    timer: () =>{\n      if(data.countDownVar>0){\n        setData({\n        [data.countDownVar]: data.countDownVar-=1,\n        [data.counter]: data.counter+=1\n        });\n        //console.log(data.ariaCounter)\n        return setData({...data});\n      }\n      if(data.countDownVar===0 && data.label===\"Focusing\"){\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.breakTimer*60,\n          [data.label]: data.label = \"On Break\",\n          [data.counter]: data.counter=0,\n        });\n        return setData({...data});\n      }\n      if(data.countDownVar===0 && data.label===\"On Break\"){\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n          [data.label]: data.label = \"Focusing\",\n          [data.counter]: data.counter=0,\n        });\n          return setData({...data});\n      }\n    }\n  }\n\n  let initialState={\n    focusTimer: 25,\n    breakTimer: 5,\n    label: \"Focusing\",\n    counter: 0,\n    displayTimer: false,\n    isTimerRunning:false,\n    countDownVar: 0,\n    displayClickCounter: 0,\n  }\n\n  \n  let [data, setData] = useState({...initialState});\n\n  //console.log('DATA OBJ', data);\n\n  useInterval(\n    () => {\n      fnObj.timer()\n    },\n    data.isTimerRunning ? 1000 : null\n  );\n  \n  \n  // function timer(){\n  //   if(data.countDownVar>0){\n  //     setData({\n  //     [data.countDownVar]: data.countDownVar-=1,\n  //     [data.counter]: data.counter+=1\n  //     });\n  //     //console.log(data.ariaCounter)\n  //     return setData({...data});\n  //   }\n  //   if(data.countDownVar===0 && data.label===\"Focusing\"){\n  //     new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n  //     setData({\n  //       [data.countDownVar]: data.countDownVar = data.breakTimer*60,\n  //       [data.label]: data.label = \"On Break\",\n  //       [data.counter]: data.counter=0,\n  //     });\n  //     return setData({...data});\n  //   }\n  //   if(data.countDownVar===0 && data.label===\"On Break\"){\n  //     new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n  //     setData({\n  //       [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n  //       [data.label]: data.label = \"Focusing\",\n  //       [data.counter]: data.counter=0,\n  //     });\n  //       return setData({...data});\n  //   }\n  // }\n\n  // function playPause() {\n  //   setData({\n  //     [data.displayTimer]: data.displayTimer = true, \n  //     [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n  //     [data.displayClickCounter]: data.displayClickCounter+=1\n  //   })\n  //   //setData({...data});\n  //   if(data.displayClickCounter===1){\n  //     setData({\n  //       [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n  //     });\n  //     return setData({...data})\n  //   }\n  //   return setData({...data})\n  // }\n\n  // function stopHandler(){\n  //   playPause();\n  //   setData({...initialState});\n  // }\n\n  return (\n    <div className=\"pomodoro\">\n      <LandingDisplay \n        data={data} \n        stopHandler={fnObj.stopHandler} \n        playPause={fnObj.playPause}\n        setData={setData}\n      />\n      <AfterPlay data={data} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}