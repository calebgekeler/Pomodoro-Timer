{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport AfterPlay from './AfterPlay';\nimport LandingDisplay from './LandingDisplay';\n\nfunction Pomodoro() {\n  const fnObj = {\n    playPause: () => {\n      setData({\n        [data.displayTimer]: data.displayTimer = true,\n        [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n        [data.displayClickCounter]: data.displayClickCounter += 1\n      }); //setData({...data});\n\n      if (data.displayClickCounter === 1) {\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer * 60\n        });\n        return setData({ ...data\n        });\n      }\n\n      return setData({ ...data\n      });\n    },\n    stopHandler: () => {\n      fnObj.playPause();\n      setData({ ...initialState\n      });\n    },\n    timer: () => {\n      if (data.countDownVar > 0) {\n        setData({\n          [data.countDownVar]: data.countDownVar -= 1,\n          [data.counter]: data.counter += 1\n        }); //console.log(data.ariaCounter)\n\n        return setData({ ...data\n        });\n      }\n\n      if (data.countDownVar === 0 && data.label === \"Focusing\") {\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.breakTimer * 60,\n          [data.label]: data.label = \"On Break\",\n          [data.counter]: data.counter = 0\n        });\n        return setData({ ...data\n        });\n      }\n\n      if (data.countDownVar === 0 && data.label === \"On Break\") {\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer * 60,\n          [data.label]: data.label = \"Focusing\",\n          [data.counter]: data.counter = 0\n        });\n        return setData({ ...data\n        });\n      }\n    },\n    focusPlusHandler: () => {\n      data.focusTimer <= 59 ? setData({\n        [data.focusTimer]: data.focusTimer += 5\n      }) : alert('The maximum focus timer allowed is 60 minutes');\n      setData({ ...data\n      });\n    },\n    focusMinusHandler: () => {\n      data.focusTimer > 6 ? setData({\n        [data.focusTimer]: data.focusTimer -= 5\n      }) : alert('The minimum focus timer allowed is 5 minutes');\n      setData({ ...data\n      });\n    },\n    breakPlusHandler: () => {\n      data.breakTimer <= 14 ? setData({\n        [data.breakTimer]: data.breakTimer += 1\n      }) : alert('The maximum break timer allowed is 15 minutes');\n      setData({ ...data\n      });\n    },\n    breakMinusHandler: () => {\n      data.breakTimer >= 2 ? setData({\n        [data.breakTimer]: data.breakTimer -= 1\n      }) : alert('The minimum break timer allowed is 1 minute');\n      setData({ ...data\n      });\n    }\n  };\n  let initialState = {\n    focusTimer: 25,\n    breakTimer: 5,\n    label: \"Focusing\",\n    counter: 0,\n    displayTimer: false,\n    isTimerRunning: false,\n    countDownVar: 0,\n    displayClickCounter: 0\n  };\n  let [data, setData] = useState({ ...initialState\n  }); //console.log('DATA OBJ', data);\n\n  useInterval(() => {\n    fnObj.timer();\n  }, data.isTimerRunning ? 1000 : null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LandingDisplay, {\n    data: data,\n    fnObj: fnObj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AfterPlay, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","useInterval","AfterPlay","LandingDisplay","Pomodoro","fnObj","playPause","setData","data","displayTimer","istimerRunning","isTimerRunning","displayClickCounter","countDownVar","focusTimer","stopHandler","initialState","timer","counter","label","Audio","process","env","PUBLIC_URL","play","breakTimer","focusPlusHandler","alert","focusMinusHandler","breakPlusHandler","breakMinusHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport AfterPlay from './AfterPlay'\nimport LandingDisplay from './LandingDisplay'\n\n\n\nfunction Pomodoro() {\n\n  const fnObj = {\n    playPause: () => {\n      setData({\n      [data.displayTimer]: data.displayTimer = true, \n      [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n      [data.displayClickCounter]: data.displayClickCounter+=1\n      })\n    //setData({...data});\n      if(data.displayClickCounter===1){\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n        });\n        return setData({...data})\n      }\n      return setData({...data})\n    },\n\n    stopHandler: ()=>{\n      fnObj.playPause();\n      setData({...initialState})\n    },\n\n    timer: () =>{\n      if(data.countDownVar>0){\n        setData({\n        [data.countDownVar]: data.countDownVar-=1,\n        [data.counter]: data.counter+=1\n        });\n        //console.log(data.ariaCounter)\n        return setData({...data});\n      }\n      if(data.countDownVar===0 && data.label===\"Focusing\"){\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.breakTimer*60,\n          [data.label]: data.label = \"On Break\",\n          [data.counter]: data.counter=0,\n        });\n        return setData({...data});\n      }\n      if(data.countDownVar===0 && data.label===\"On Break\"){\n        new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n          [data.label]: data.label = \"Focusing\",\n          [data.counter]: data.counter=0,\n        });\n          return setData({...data});\n      }\n    },\n    focusPlusHandler: () => {\n      data.focusTimer <=59 ? setData({[data.focusTimer]: data.focusTimer+=5}) \n      : alert('The maximum focus timer allowed is 60 minutes'); \n      setData({...data});\n    },\n    focusMinusHandler: ()=>{\n      data.focusTimer >6 ? setData({[data.focusTimer]: data.focusTimer-=5}) \n      : alert('The minimum focus timer allowed is 5 minutes'); \n      setData({...data});\n    },\n    breakPlusHandler: () =>{\n      data.breakTimer <= 14 ? setData({[data.breakTimer]: data.breakTimer+=1}) \n      : alert('The maximum break timer allowed is 15 minutes'); \n      setData({...data});\n    },\n    breakMinusHandler: () =>{\n      data.breakTimer >= 2 ?  setData({[data.breakTimer]: data.breakTimer-=1}) \n      : alert('The minimum break timer allowed is 1 minute'); \n      setData({...data});\n    },\n  }\n\n  let initialState={\n    focusTimer: 25,\n    breakTimer: 5,\n    label: \"Focusing\",\n    counter: 0,\n    displayTimer: false,\n    isTimerRunning:false,\n    countDownVar: 0,\n    displayClickCounter: 0,\n  }\n\n  \n  let [data, setData] = useState({...initialState});\n\n  //console.log('DATA OBJ', data);\n\n  useInterval(\n    () => {\n      fnObj.timer()\n    },\n    data.isTimerRunning ? 1000 : null\n  );\n  \n  \n  \n\n  return (\n    <div className=\"pomodoro\">\n      <LandingDisplay \n        data={data}\n        fnObj={fnObj}\n      />\n      <AfterPlay data={data} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}