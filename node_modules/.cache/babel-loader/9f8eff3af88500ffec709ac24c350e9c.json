{"ast":null,"code":"var _jsxFileName = \"/Users/Neo/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration'; //import {secondsToDuration} from '../utils/duration';\n\nimport AfterPlay from './AfterPlay';\nimport LandingDisplay from './LandingDisplay';\n\nfunction Pomodoro() {\n  const fnObj = {\n    playPause: () => {\n      setData({\n        [data.displayTimer]: data.displayTimer = true,\n        [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n        [data.displayClickCounter]: data.displayClickCounter += 1\n      }); //setData({...data});\n\n      if (data.displayClickCounter === 1) {\n        setData({\n          [data.countDownVar]: data.countDownVar = data.focusTimer * 60\n        });\n        return setData({ ...data\n        });\n      }\n\n      return setData({ ...data\n      });\n    }\n  };\n  let initialState = {\n    focusTimer: 25,\n    breakTimer: 5,\n    label: \"Focusing\",\n    counter: 0,\n    displayTimer: false,\n    isTimerRunning: false,\n    countDownVar: 0,\n    displayClickCounter: 0\n  };\n  let [data, setData] = useState({ ...initialState\n  }); //console.log('DATA OBJ', data);\n\n  useInterval(() => {\n    timer();\n  }, data.isTimerRunning ? 1000 : null);\n\n  function timer() {\n    if (data.countDownVar > 0) {\n      setData({\n        [data.countDownVar]: data.countDownVar -= 1,\n        [data.counter]: data.counter += 1\n      }); //console.log(data.ariaCounter)\n\n      return setData({ ...data\n      });\n    }\n\n    if (data.countDownVar === 0 && data.label === \"Focusing\") {\n      new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n      setData({\n        [data.countDownVar]: data.countDownVar = data.breakTimer * 60,\n        [data.label]: data.label = \"On Break\",\n        [data.counter]: data.counter = 0\n      });\n      return setData({ ...data\n      });\n    }\n\n    if (data.countDownVar === 0 && data.label === \"On Break\") {\n      new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n      setData({\n        [data.countDownVar]: data.countDownVar = data.focusTimer * 60,\n        [data.label]: data.label = \"Focusing\",\n        [data.counter]: data.counter = 0\n      });\n      return setData({ ...data\n      });\n    }\n  }\n\n  function playPause() {\n    setData({\n      [data.displayTimer]: data.displayTimer = true,\n      [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n      [data.displayClickCounter]: data.displayClickCounter += 1\n    }); //setData({...data});\n\n    if (data.displayClickCounter === 1) {\n      setData({\n        [data.countDownVar]: data.countDownVar = data.focusTimer * 60\n      });\n      return setData({ ...data\n      });\n    }\n\n    return setData({ ...data\n    });\n  }\n\n  function stopHandler() {\n    playPause();\n    setData({ ...initialState\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LandingDisplay, {\n    data: data,\n    stopHandler: stopHandler,\n    playPause: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AfterPlay, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/Neo/Thinkful/qualified/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","AfterPlay","LandingDisplay","Pomodoro","fnObj","playPause","setData","data","displayTimer","istimerRunning","isTimerRunning","displayClickCounter","countDownVar","focusTimer","initialState","breakTimer","label","counter","timer","Audio","process","env","PUBLIC_URL","play","stopHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration} from '../utils/duration';\n//import {secondsToDuration} from '../utils/duration';\nimport AfterPlay from './AfterPlay'\nimport LandingDisplay from './LandingDisplay'\n\n\n\nfunction Pomodoro() {\n\n  const fnObj = {\n    playPause: () => {setData({\n      [data.displayTimer]: data.displayTimer = true, \n      [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n      [data.displayClickCounter]: data.displayClickCounter+=1\n    })\n    //setData({...data});\n    if(data.displayClickCounter===1){\n      setData({\n        [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n      });\n      return setData({...data})\n    }\n    return setData({...data})}\n  }\n\n  let initialState={\n    focusTimer: 25,\n    breakTimer: 5,\n    label: \"Focusing\",\n    counter: 0,\n    displayTimer: false,\n    isTimerRunning:false,\n    countDownVar: 0,\n    displayClickCounter: 0,\n  }\n\n  \n  let [data, setData] = useState({...initialState});\n\n  //console.log('DATA OBJ', data);\n\n  useInterval(\n    () => {\n      timer()\n    },\n    data.isTimerRunning ? 1000 : null\n  );\n  \n  \n  function timer(){\n    if(data.countDownVar>0){\n      setData({\n      [data.countDownVar]: data.countDownVar-=1,\n      [data.counter]: data.counter+=1\n      });\n      //console.log(data.ariaCounter)\n      return setData({...data});\n    }\n    if(data.countDownVar===0 && data.label===\"Focusing\"){\n      new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n      setData({\n        [data.countDownVar]: data.countDownVar = data.breakTimer*60,\n        [data.label]: data.label = \"On Break\",\n        [data.counter]: data.counter=0,\n      });\n      return setData({...data});\n    }\n    if(data.countDownVar===0 && data.label===\"On Break\"){\n      new Audio(`${process.env.PUBLIC_URL}/alarm/piece-of-cake-611.mp3`).play();\n      setData({\n        [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n        [data.label]: data.label = \"Focusing\",\n        [data.counter]: data.counter=0,\n      });\n        return setData({...data});\n    }\n  }\n\n  function playPause() {\n    setData({\n      [data.displayTimer]: data.displayTimer = true, \n      [data.istimerRunning]: data.isTimerRunning = !data.isTimerRunning,\n      [data.displayClickCounter]: data.displayClickCounter+=1\n    })\n    //setData({...data});\n    if(data.displayClickCounter===1){\n      setData({\n        [data.countDownVar]: data.countDownVar = data.focusTimer*60,\n      });\n      return setData({...data})\n    }\n    return setData({...data})\n  }\n\n  function stopHandler(){\n    playPause();\n    setData({...initialState});\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <LandingDisplay \n        data={data} \n        stopHandler={stopHandler} \n        playPause={playPause}\n      />\n      <AfterPlay data={data} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}